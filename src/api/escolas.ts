import { ESCOLAS_ENDPOINT } from ".";
import type { Estado } from "./estados";

// Generated by https://quicktype.io

export type Escola = {
  anoCenso: number;
  cod: number;
  nome: string;
  codCidade: number;
  cidade: string;
  estado: string;
  regiao: Regiao;
  // situacaoFuncionamento: number;
  // dependenciaAdministrativa: number;
  // idebAI: number;
  // idebAF: number;
  enemMediaGeral: number;
  situacaoFuncionamentoTxt: SituacaoFuncionamentoTxt;
  dependenciaAdministrativaTxt: DependenciaAdministrativaTxt;
  [key: string]: any;
};

export enum DependenciaAdministrativaTxt {
  Estadual = "Estadual",
  Municipal = "Municipal",
  Privada = "Privada",
}

export enum Regiao {
  Nordeste = "Nordeste",
  Norte = "Norte",
  Sudeste = "Sudeste",
  Sul = "Sul",
}

export enum SituacaoFuncionamentoTxt {
  EmAtividade = "Em atividade",
  Paralisada = "Paralisada",
}

export type Cidade = {
  id: number;
  nome: string;
};

export async function getCidadesDeEstado(
  estado: Estado
): Promise<Array<Cidade>> {
  if (estado == null) return [];

  const response = await fetch(
    ESCOLAS_ENDPOINT + `cidades/${estado.sigla.toLowerCase()}`
  );
  const data: string[] = await response.json();

  console.log(data);

  return data.map((line) => {
    const [id, nome] = line.split(":");

    return {
      id: +id,
      nome,
    } as Cidade;
  });
}

export async function buscaEscolas(
  nome: string,
  estado: Estado,
  cidade: Cidade | null
): Promise<Array<Escola>> {
  const response = await fetch(
    ESCOLAS_ENDPOINT +
      `escolas/buscaavancada?nome=${nome}&estado=${estado.sigla}` +
      (cidade && `&municipio=${cidade.id}`)
  );
  const data: Array<Escola> = await response.json()[1];

  return data;
}
